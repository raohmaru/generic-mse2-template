mse version: 2.0.0
game: generic
short name: Normal
full name: Normal style
installer group: Generic/Normal style
icon: card-sample.png
position hint: 003

version: 2016-01-30
depends on: generic.mse-game 2016-12-27
depends on: generic-none.mse-symbol-font 2016-01-30

card background: white
card width: 750
card height: 1046
card dpi: 300

############################################################## Extra scripts

init script:
	# constants
	CARD_WIDTH := 750
	CARD_HEIGHT := 1046
	VALUE_HEIGHT := 66
	TEXT_BOX_OFFSET_Y := 58
	L_NAME_IMG_TYPE := "name, image, type"
	L_NAME_TEXT_IMG := "name, text, image"
	L_NAME_TYPE_IMG := "name, type, image"
    
	inner_width  := { CARD_WIDTH - border_width() * 2 }
	inner_height :=	{ CARD_HEIGHT - border_width() * 2 }

	to_number_or_def := {
		if input == "" then default
		else to_number(input) or else default
	}
	name_fsz       := { to_number_or_def(styling.name_font_size,      default: 34) }
	value_fsz      := { to_number_or_def(styling.value_font_size,     default: 30) }
	type_fsz       := { to_number_or_def(styling.type_font_size,      default: 20) }
	text_fsz       := { to_number_or_def(styling.text_font_size,      default: 24) }
	copyright_fsz  := { to_number_or_def(styling.copyright_font_size, default: 12) }
	image_height   := { to_number_or_def(styling.image_height,        default: 450) }
	border_width   := { if styling.show_border then to_number_or_def(styling.border_width, default: 24) else 0 }
	text_bd_width  := { to_number_or_def(styling.text_border_width,   default: 3) }
	value_bd_width := { to_number_or_def(styling.value_border_width,  default: 3) }
	img_bd_width   := { to_number_or_def(styling.image_border_width,  default: 3) }
	
	name_width := {
		if      card.value == "" or input == "center" then 700
		else if card_style.value.content_width <= 50 then 625
		else    670 - card_style.value.content_width
	}	
	value_width := {
		if card.value != "" then max(card_style.value.content_width + 22, 66)
	}
	value_height := {
		if styling.layout != L_NAME_IMG_TYPE and value_fsz() > 30 then
			max(value_fsz() + 20, 110) + input - 50
		else input
	}
	
	name_alignment := {
		"shrink-overflow middle " + 
		if styling.name_align == "center if no corner value" then (
			if card.value == "" then "center" else "left"
		)
		else styling.name_align
	}	
	text_alignment := {
		styling.text_vertical_align + 
		if styling.text_align == "center short text" then (
			if (not contains(match:"\n", card.rule_text) and
			card.flavor_text == "<i-flavor></i-flavor>" and
			card_style.text.content_lines <= 2)
			then " center"
		)
		else " " + styling.text_align
	}
	
	image_top:= {
		if styling.layout == L_NAME_IMG_TYPE then 134
		else if styling.layout == L_NAME_TEXT_IMG then (
			(if set.Extended_Card_Info then 972 else 992)
			- image_height()
		)
		else 190
	}
	
	text_top:= {
		if styling.layout == L_NAME_TEXT_IMG then 190 + input - TEXT_BOX_OFFSET_Y
		else
			image_top() + image_height() + input -
			(if styling.layout == L_NAME_TYPE_IMG then 40)
	}
	text_bottom := {
		if styling.layout == L_NAME_TEXT_IMG then
			image_top() + input - 44
		else
			(if set.Extended_Card_Info then 970 else 990) + input
	}

############################################################## Set info fields
set info style:	
	symbol:
		max aspect ratio: 2.5
		variation:
			name: normal
			border radius: 0.08
			fill type: solid
			fill color:   rgb(0,0,0)
			border color: rgba(255,255,255,0)
			
		variation:
			name: uncommon
			border radius: 0.07
			fill type: linear gradient
			fill color 1:   rgb(224,224,224)
			fill color 2:   rgb(84, 84, 84)
			border color 1: rgb(0,  0,  0)
			border color 2: rgb(0,  0,  0)
			
		variation:
			name: rare
			border radius: 0.07
			fill type: linear gradient
			fill color 1:   rgb(214,196,94)
			fill color 2:   rgb(95, 84, 40)
			border color 1: rgb(0,  0,  0)
			border color 2: rgb(0,  0,  0)
			
		variation:
			name: mythic rare
			border radius: 0.07
			fill type: linear gradient
			fill color 1:   rgb(245,148,31)
			fill color 2:   rgb(186,45,38)
			border color 1: rgb(0,  0,  0)
			border color 2: rgb(0,  0,  0)
			
		variation:
			name: special
			border radius: 0.10
			fill type: linear gradient
			fill color 1:   rgb(224,170,247)
			fill color 2:   rgb(58,7,80)
			border color 1: rgb(255,255,255)
			border color 2: rgb(255,255,255)
			
		variation:
			name: inverted
			border radius: 0.08
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgba(0,0,0,0)

############################################################## Extra style options
############################# Typography
############# Name
styling field:
	type: text
	name: name font
	description: A valid font name installed in your system used for the card name. E.g. Arial Black.
	
styling field:
	type: text
	name: name font size
	description: Font size for the card name. Default is 34.
	
styling field:
	type: color
	name: name color
	description: Color of the card name.
	initial: rgb(255,255,255)
	choice:
		name: black
		color: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)

############# Corner Value
styling field:
	type: text
	name: value font
	description: A valid font name installed in your system used for the corner value. E.g. Wingdings.
	
styling field:
	type: package choice
	name: value symbol font
	match: generic-*.mse-symbol-font
	initial: generic-none.mse-symbol-font
	description: Symbol font size for the corner value.
	
styling field:
	type: text
	name: value font size
	description: Font size for the corner value. Default is 30.

styling field:
	type: color
	name: value color
	description: Color of the corner value.
	initial: rgb(255,255,255)
	choice:
		name: black
		color: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)

############# Type
styling field:
	type: text
	name: type font
	description: A valid font name installed in your system used for the card type. E.g. Verdana.
	
styling field:
	type: text
	name: type font size
	description: Font size for the card type. Default is 20.

styling field:
	type: color
	name: type color
	description: Color of the card type.
	initial: rgb(255,255,255)
	choice:
		name: black
		color: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)

############# Rules and flavour
styling field:
	type: text
	name: text font
	description: A valid font name installed in your system used for the card rules E.g. Times New Roman.
	
styling field:
	type: package choice
	name: text symbol font
	match: generic-*.mse-symbol-font
	initial: generic-none.mse-symbol-font
	description: Symbol font size for the card text.
	
styling field:
	type: text
	name: text font size
	description: Font size for the card text. Default is 24.

styling field:
	type: color
	name: text color
	description: Color for the card rules and flavour text
	initial: rgb(0,0,0)
	choice:
		name: black
		color: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)

############# Number, copyright and gamecode
styling field:
	type: text
	name: copyright font
	description: A valid font name installed in your system used for the copyright text E.g. Tahoma.
	
styling field:
	type: text
	name: copyright font size
	description: Font size for the copyright text. Default is 12.

styling field:
	type: color
	name: copyright color
	description: Color for the card number and copyright
	initial: rgb(255,255,255)
	choice:
		name: black
		color: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)
	
#############################
styling field:
	type: info
	name: Divider
	
############################# Text alignment
styling field:
	type: choice
	name: name align
	description: Horizontal alignment of the name ("center if no corner value" means align to left if card has a value defined).
	choice: left
	choice: center
	choice: center if no corner value
	choice: right
	initial: center
	
styling field:
	type: choice
	name: type align
	description: Horizontal alignment of the card type.
	choice: left
	choice: center
	choice: right
	initial: center
	
styling field:
	type: choice
	name: text align
	description: Horizontal alignment of the rule text (center short text only means only on one-line cards with no flavor text).
	choice: left
	choice: center
	choice: center short text
	choice: right
	initial: left
	
styling field:
	type: choice
	name: text vertical align
	description: Vertical alignment of the rule text.
	choice: top
	choice: middle
	choice: bottom
	initial: middle
		
############################# Boxes
styling field:
	type: choice
	name: text box
	description: Show a box below the rule text.
	initial: solid box
	choice: none
	choice: solid box
    
styling field:
	type: text
	name: text border width
	description: The width of the border of the text box. Default is 3.

styling field:
	type: choice
	name: value box
	description: Show a box below the corner value.
	initial: none
	choice: none
	choice: solid box
    
styling field:
	type: text
	name: value border width
	description: The width of the border of the value box. Default is 3.

#############################	
styling field:
	type: info
	name: Divider

############################# Layout and borders
styling field:
	type: choice
	name: layout
	description: Change the layout of the card.
	initial: name, image, type
	choice: name, type, image
	choice: name, image, type
	choice: name, text, image
	
styling field:
	type: text
	name: image height
	description: Set the height of the image in pixels. Default is 450.

styling field:
	type: boolean
	name: image border
	description: Show a border around the image.
	initial: no
    
styling field:
	type: text
	name: image border width
	description: The width of the border of the image. Default is 3.

styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted?
	initial: no
	
styling field:
	type: boolean
	name: background image
	description: Use a background image instead of a solid color.
	initial: no

styling field:
	type: boolean
	name: show border
	description: Show card border.
	initial: yes
	
styling field:
	type: text
	name: border width
	description: Set the width of the card border. Default is 24.
			
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?.
	match: generic-overlay-*.mse-include
	required: false

############################# Styling choices
styling style:
	name align:
		render style: both
		choice images:
			left:                      /generic.mse-game/icons/text-left.png
			center:                    /generic.mse-game/icons/text-center.png
			center if no corner value: /generic.mse-game/icons/text-center.png
			right:                     /generic.mse-game/icons/text-right.png
			
	type align:
		render style: both
		choice images:
			left:                  /generic.mse-game/icons/text-left.png
			center:                /generic.mse-game/icons/text-center.png
			right:                 /generic.mse-game/icons/text-right.png
	
	text align:
		render style: both
		choice images:
			left:              /generic.mse-game/icons/text-left.png
			center:            /generic.mse-game/icons/text-center.png
			center short text: /generic.mse-game/icons/text-center-short.png
			right:             /generic.mse-game/icons/text-right.png
			
	text vertical align:
		render style: both
		choice images:
			top:    /generic.mse-game/icons/align-top.png
			middle: /generic.mse-game/icons/align-middle.png
			bottom: /generic.mse-game/icons/align-bottom.png
			
	text box:
		render style: both
		choice images:
			solid box:  /generic.mse-game/icons/box-solid.png
			
	value box:
		render style: both
		choice images:
			solid box:  /generic.mse-game/icons/box-solid.png
			
	layout:
		render style: both
		choice images:
			name, type, image: /generic.mse-game/icons/layout-1.png
			name, image, type: /generic.mse-game/icons/layout-2.png
			name, text, image: /generic.mse-game/icons/layout-3.png

############################################################## Card fields
card style:
	############################# Background
	color:
		left: {border_width()}
		top: {border_width()}
		width:	{inner_width()}
		height:	{inner_height()}
		z index: -2
	
	############################# Name line
	name:
		left:   53
		top:   50
		right:  {name_width(styling.name_align)}
		height: {VALUE_HEIGHT}
		alignment: script: name_alignment()
		z index: 2
		font:
			name: {styling.name_font}
			size: {name_fsz()}
			color: {styling.name_color}
			weight: bold
		line height soft: 0.8
		line height hard: 0.8
		line height line: 0.8
		line height hard max: 1.0
		line height line max: 1.0
	
	value:
		right: 692
		top: 58
		width: {min(50, card_style.value.content_width + 6)}
		height: {value_height(50)}
		z index: 2
		padding right: {if card_style.value.content_width <= VALUE_HEIGHT then 0 else 4}
		alignment: {if card_style.value.content_width <= VALUE_HEIGHT then "center middle" else "right middle"}
		font:
			name: {styling.value_font}
			size: {value_fsz()}
			color: {styling.value_color}
			weight: bold
		symbol font:
			name: {styling.value_symbol_font}
			size: {value_fsz()}
	
	############################# Image
	image:
		left: {53 + img_bd_width()}
		top: script: image_top() + img_bd_width()
		width: {645 - img_bd_width() * 2}
		height:	{image_height() - img_bd_width() * 2}
		z index: 1
		visible: {image_height() > 0}
	
	############################# Text box	
	type:
		left: {if set.Extended_Card_Info and styling.layout == L_NAME_IMG_TYPE then 100 else 53}
		top: {if styling.layout == L_NAME_IMG_TYPE then image_top() + image_height() + 6 else 135}
		height: 45
		right: {if set.Extended_Card_Info and styling.layout == L_NAME_IMG_TYPE then 650 else name_width(styling.type_align)}
		z index: 2
		alignment: {styling.type_align + " middle shrink-overflow"}
		font:
			name: {styling.type_font}
			size: {type_fsz()}
			color: {styling.type_color}
			
	text:
		left: {78 + text_bd_width()}
		top: {text_top(60) + text_bd_width()}
		right:  {672 - text_bd_width()}
		bottom: {text_bottom(0) - text_bd_width()}
		alignment: script: text_alignment()
		z index: 2
		font:
			name: {styling.text_font}
			size: {text_fsz()}
			scale down to: 14
			color: {styling.text_color}
		symbol font:
			name: {styling.text_symbol_font}
			size: {text_fsz()}
		line height soft: 1.0
		line height hard: 1.4
		line height line: 1.6
		line height hard max: 1.5
		line height line max: 1.7
	
	############################# Symbol & Edition and Card ID	
	symbol:
		top: {if styling.layout == L_NAME_IMG_TYPE then image_top() + image_height() + 6 else 976}
		left: 53
		width: {if styling.layout == L_NAME_IMG_TYPE then 42 else 36}
		height: {if styling.layout == L_NAME_IMG_TYPE then 42 else 36}
		z index: 1
		render style: image
		alignment: middle left
		choice images:
			# Images based on the set symbol
			normal:      
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "inverted")
					else symbol_variation(symbol: set.symbol, variation: "normal")
			uncommon:    script: symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:        script: symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare: script: symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:     script: symbol_variation(symbol: set.symbol, variation: "special")
		visible: {set.Extended_Card_Info}
			
	number:
		top: {if card.gamecode == "" then 980 else 996}
		left: {if styling.layout == L_NAME_IMG_TYPE then 53 else 99}
		width: 120
		height: 20
		z index: 2
		alignment: left middle
		font:
			name: {styling.copyright_font}
			size: {copyright_fsz()}
			color: {styling.copyright_color}
		visible: {set.Extended_Card_Info}
	
	############################# Copyright stuff
	gamecode:
		left: {if styling.layout == L_NAME_IMG_TYPE then 53 else 99}
		top: {if card.number != "" then 976 else 980}
		width: {if styling.layout == L_NAME_IMG_TYPE then 318 else 256}
		height: 22
		alignment: left middle shrink-overflow
		z index: 2
		font:
			name: {styling.copyright_font}
			size: {copyright_fsz()}
			color: {styling.copyright_color}
		visible: {set.Extended_Card_Info}
	
	copyright:
		right: 697
		top: 980
		width: 318
		height: 22
		z index: 2
		alignment: right middle shrink-overflow
		font: 
			name: {styling.copyright_font}
			size: {copyright_fsz()}
			color: {styling.copyright_color}
		visible: {set.Extended_Card_Info}

############################################################## Extra card fields
extra card field:
	type: image
	name: bg image
	show statistics: false
	save value: true
	description: Double click to set a background image.
	
extra card field:
	type: color
	name: border color
	default: rgba(0,0,0,0)
	default name: Default
	choice:
		name: white
		color: rgb(255,255,255)
	choice:
		name: silver
		color: rgb(128,128,128)
	choice:
		name: gold
		color: rgb(200,180,0)
	show statistics: false
	save value: true
	description: Border color.
	
extra card field:
	type: color
	name: text solid box
	default: rgb(255,255,255)
	choice:
		name: black
		color: rgb(0,0,0)
	show statistics: false
	save value: true
	description: Click to change the text background color.
	
extra card field:
	type: color
	name: text border box
	default: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)
	show statistics: false
	save value: true
	description: Click to change the border color of the text box.
	
extra card field:
	type: color
	name: value solid box
	default: rgb(255,255,255)
	choice:
		name: black
		color: rgb(0,0,0)
	show statistics: false
	save value: true
	description: Click to change the value background color.
	
extra card field:
	type: color
	name: value border box
	default: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)
	show statistics: false
	save value: true
	description: Click to change the border color of the value box.
	
extra card field:
	type: color
	name: image border
	default: rgb(0,0,0)
	choice:
		name: white
		color: rgb(255,255,255)
	show statistics: false
	save value: true
	description: Click to change the border color of the image.
	
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
	
############################################################## Extra card style
extra card style:	
	bg image:
		left: {border_width()}
		top: {border_width()}
		width:	{inner_width()}
		height:	{if styling.background_image then inner_height() else 0}
		z index: -1
		visible: {styling.background_image}
	
	border color:
		left: 0
		top: 0
		width:	{CARD_WIDTH}
		height:	{CARD_HEIGHT}
		z index: -3
		visible: {styling.show_border}
	
	text solid box:
		left: {53 + text_bd_width()}
		top: {text_top(TEXT_BOX_OFFSET_Y) + text_bd_width()}
		right:  {697 - text_bd_width()}
		bottom: {text_bottom(5) - text_bd_width()}
		z index: 0
		visible: {styling.text_box == "solid box"}
	
	text border box:
		left: 53
		top: {text_top(TEXT_BOX_OFFSET_Y)}
		right:  697
		bottom: {text_bottom(5)}
		z index: -1
		visible: {styling.text_box != "none"}
	
	value solid box:
		right: {700 - value_bd_width()}
		top: {50 + value_bd_width()}
		width: {value_width() - value_bd_width() * 2}
		height: {value_height(VALUE_HEIGHT) - value_bd_width() * 2}
		z index: 0
		visible: {card.value != "" and styling.value_box == "solid box"}
	
	value border box:
		right: 700
		top: 50
		width: {value_width()}
		height: {value_height(VALUE_HEIGHT)}
		z index: -1
		visible: {card.value != "" and styling.value_box != "none"}
	
	image border:
		left:	53
		top: script: image_top()
		width: 645
		height:	{image_height()}
		z index: 0
		visible: {styling.image_border}
	
	foil layer:
		left: 0
		top: 0
		width:	{CARD_WIDTH}
		height:	{CARD_HEIGHT}
		z index: 10
		render style: image
		image: {if styling.overlay == "" then nil else styling.overlay + "/overlay.png"}